{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","utils/useSearchParams.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","isActiveLink","isActive","cn","className","role","to","App","HomePage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","useRouterSearchParams","setSearchParams","query","get","sex","centuriesUrl","getAll","PeopleFilters","centuries","from","length","_","index","String","type","placeholder","onChange","e","target","map","num","includes","filter","century","Loader","PersonLink","person","slug","name","PeopleTable","people","id","useParams","filterPeople","filteredPeople","queryLowerCase","toLowerCase","fatherName","motherName","Math","ceil","born","findParent","parentName","parent","find","died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","loading","setLoading","errorMessage","setErrorMessage","useEffect","getPeople","data","catch","finally","ErrorPage","Root","path","element","replace","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.70a6ca1c.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const isActiveLink = ({ isActive }: { isActive: boolean }) => (\n    cn('navbar-item', { 'has-background-grey-lighter': isActive })\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={isActiveLink}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            to=\"/people\"\n            className={isActiveLink}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams as useRouterSearchParams } from 'react-router-dom';\n\nexport const useSearchParams = () => {\n  const [searchParams, setSearchParams] = useRouterSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuriesUrl = searchParams.getAll('centuries') || [];\n\n  return {\n    searchParams,\n    setSearchParams,\n    query,\n    sex,\n    centuriesUrl,\n  };\n};\n","import cn from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { useSearchParams } from '../utils/useSearchParams';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const {\n    sex,\n    query,\n    searchParams,\n    setSearchParams,\n    centuriesUrl,\n  } = useSearchParams();\n\n  const centuries = Array.from(\n    { length: 5 },\n    (_, index) => String(16 + index),\n  );\n\n  const handleQueryChane = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const search = getSearchWith(searchParams, (\n      { query: e.target.value || null }\n    ));\n\n    setSearchParams(search);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={cn({ 'is-active': !sex })}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={cn({ 'is-active': sex === 'm' })}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={cn({ 'is-active': sex === 'f' })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChane}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuries.map(num => (\n              <SearchLink\n                data-cy=\"century\"\n                className={cn('button mr-1',\n                  { 'is-info': centuriesUrl.includes(num) })}\n                params={{\n                  centuries: centuriesUrl.includes(num)\n                    ? centuriesUrl.filter(century => century !== num)\n                    : [...centuriesUrl, num],\n                }}\n              >\n                {num}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuriesUrl.length,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null,\n            query: null,\n            centuries: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { useSearchParams } from '../utils/useSearchParams';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { id } = useParams();\n\n  const {\n    sex,\n    query,\n    centuriesUrl,\n  } = useSearchParams();\n\n  const filterPeople = () => {\n    let filteredPeople = people;\n\n    if (sex) {\n      filteredPeople = filteredPeople.filter(person => person.sex === sex);\n    }\n\n    if (query) {\n      const queryLowerCase = query.toLowerCase();\n\n      filteredPeople = filteredPeople\n        .filter(person => person.name.toLowerCase().includes(queryLowerCase)\n          || (person.fatherName && person.fatherName.toLowerCase()\n            .includes(queryLowerCase))\n          || (person.motherName && person.motherName.toLowerCase()\n            .includes(queryLowerCase)));\n    }\n\n    if (centuriesUrl && centuriesUrl.length > 0) {\n      filteredPeople = filteredPeople.filter(person => centuriesUrl\n        .includes(Math.ceil(person.born / 100).toString()));\n    }\n\n    return filteredPeople;\n  };\n\n  const findParent = (parentName: string) => {\n    const parent = people.find(({ name }) => name === parentName);\n\n    if (parent) {\n      return (\n        <PersonLink person={parent} />\n      );\n    }\n\n    return parentName;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"\n        table\n        is-striped\n        is-hoverable\n        is-narrow\n        is-fullwidth\n      \"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterPeople().length\n          ? filterPeople().map((person) => (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn({\n                'has-background-warning': person.slug === id,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n\n              <td>\n                {\n                  person.motherName ? findParent(person.motherName) : '-'\n                }\n              </td>\n\n              <td>\n                {\n                  person.fatherName ? findParent(person.fatherName) : '-'\n                }\n              </td>\n            </tr>\n          )) : 'There are no people matching the current search criteria'}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(data))\n      .catch(() => setErrorMessage(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {loading && <Loader />}\n\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {(!loading && people.length === 0)\n                && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n              {(!loading && !errorMessage && people.length)\n                && (<PeopleTable people={people} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":id\" />\n        </Route>\n\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container).render(<Root />);\n"],"sourceRoot":""}